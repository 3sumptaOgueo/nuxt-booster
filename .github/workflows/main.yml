name: Main
on:
  push:
    branches:
      - main

jobs:
  installPlayground:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    name: Install
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [18]

    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: cache node_modules (Playground)
        uses: actions/cache@v3
        id: cache
        with:
          path: |
            node_modules
            ~/.cache/ms-playwright/
            ~\AppData\Local\ms-playwright\
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-deps-${{ hashFiles(format('{0}{1}', github.workspace, '/package-lock.json')) }}
      - name: Install Dependencies (Playground)
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Test
        run: npm run test

  installDocs:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    name: Install (Docs)
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [18]

    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: cache node_modules (Docs)
        uses: actions/cache@v3
        id: cache
        with:
          path: docs/node_modules
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-deps-${{ hashFiles(format('{0}{1}', github.workspace, '/docs/package-lock.json')) }}
      - name: Install Dependencies (Docs)
        if: steps.cache.outputs.cache-hit != 'true'
        run: cd docs && npm ci

  semantic-version:
    name: Semantic Release
    needs: [installPlayground, installDocs]
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [18]

    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: cache node_modules
        uses: actions/cache@v3
        id: cache
        with:
          path: |
            node_modules
            ~/.cache/ms-playwright/
            ~\AppData\Local\ms-playwright\
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-deps-${{ hashFiles(format('{0}{1}', github.workspace, '/package-lock.json')) }}
      - name: Versioning
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npx -p pinst -p semantic-release -p @semantic-release/git -p @semantic-release/changelog -p @semantic-release/exec -p @semantic-release/github semantic-release --provider=github --debug=true

  build-playground:
    name: Build (Playground)
    needs: semantic-version
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [18]

    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: cache node_modules
        uses: actions/cache@v3
        id: cache
        with:
          path: |
            node_modules
            ~/.cache/ms-playwright/
            ~\AppData\Local\ms-playwright\
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-deps-${{ hashFiles(format('{0}{1}', github.workspace, '/package-lock.json')) }}
      - name: Build
        run: |
          npm run generate --build-analyze --base=/playground/ --website-host=https://nuxt-speedkit.grabarzundpartner.dev
          mkdir dist/reports dist/reports/webpack
          cp -R .reports/webpack/* dist/reports/webpack
          touch dist/.nojekyll
        env:
          DIST_PATH: dist
      - name: Archive Production Artifact
        uses: actions/upload-artifact@master
        with:
          name: playgroundArtifact
          path: dist

  build-docs:
    name: Build (Docs)
    needs: semantic-version
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [18]

    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: cache docs/node_modules
        uses: actions/cache@v3
        id: cache
        with:
          path: docs/node_modules
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-deps-${{ hashFiles(format('{0}{1}', github.workspace, '/docs/package-lock.json')) }}-docs
      - name: Build
        run: |
          cd ./docs
          npm run generate
          touch docs/.output/public/.nojekyll
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Archive Production Artifact
        uses: actions/upload-artifact@master
        with:
          name: docsArtifact
          path: docs/.output/public

  sitespeed:
    runs-on: ${{ matrix.os }}
    name: Running sitespeed.io

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [18]

    steps:
      - name: docker pull
        run: |
          docker pull sitespeedio/sitespeed.io:20.0.0
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Start throttle 3g
        run: |
          npm install @sitespeed.io/throttle -g
          throttle 3g
      - name: Running sitespeed.io container with arguments and optional Docker options
        run: |
          docker run -v "$(pwd):/sitespeed.io" sitespeedio/sitespeed.io:20.0.0 https://nuxt-speedkit.grabarzundpartner.dev/playground/ --budget.configPath .github/budgets/sitespeed.json -n 3 -b chrome --mobile --summary-detail --outputFolder sitespeed-report/nuxt-speedkit
          docker run -v "$(pwd):/sitespeed.io" sitespeedio/sitespeed.io:20.0.0 https://grabarzundpartner.de/ --budget.configPath .github/budgets/sitespeed.json -n 3 -b chrome --mobile --summary-detail --outputFolder sitespeed-report/grabarzundpartner
          docker run -v "$(pwd):/sitespeed.io" sitespeedio/sitespeed.io:20.0.0 https://grabarz-group.de/ --budget.configPath .github/budgets/sitespeed.json -n 3 -b chrome --mobile --summary-detail --outputFolder sitespeed-report/grabarz-group
      - name: Stop throttle 3g
        run: |
          npm install @sitespeed.io/throttle -g
          throttle stop
      - name: Archive Sitespeed Report
        uses: actions/upload-artifact@master
        with:
          name: sitespeedReportArtifact
          path: sitespeed-report

  deploy-ghpages:
    name: Deploy (GH-Pages)
    needs: [build-playground, build-docs, sitespeed]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [18]
    steps:
      - name: Download Artifact (Docs)
        uses: actions/download-artifact@master
        with:
          name: docsArtifact
          path: public/docs
      - name: Download Artifact (Playground)
        uses: actions/download-artifact@master
        with:
          name: playgroundArtifact
          path: public/docs/playground
      - name: Download Artifact (Sitespeed)
        uses: actions/download-artifact@master
        with:
          name: sitespeedReportArtifact
          path: public/docs/reports/sitespeed
      - name: Deploy to GH-Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: public
